0:    proc  - (:root:) creates proc  0 (:init:)
1:  proc  0 (:init::1) sample2.pml:70 (state 3) [else]
2:    proc  0 (:init::1) sample2.pml:70 (state 4) [mypair[x].key = 10]
3:  proc  0 (:init::1) sample2.pml:70 (state 5) [mypair[x].tid = x]
4:    proc  0 (:init::1) sample2.pml:70 (state 6) [x = (x+1)]
5:  proc  0 (:init::1) sample2.pml:73 (state 8) [.(goto)]
6:    proc  0 (:init::1) sample2.pml:70 (state 3) [else]
7:  proc  0 (:init::1) sample2.pml:70 (state 4) [mypair[x].key = 10]
8:    proc  0 (:init::1) sample2.pml:70 (state 5) [mypair[x].tid = x]
9:  proc  0 (:init::1) sample2.pml:70 (state 6) [x = (x+1)]
10:    proc  0 (:init::1) sample2.pml:73 (state 8) [.(goto)]
11:   proc  0 (:init::1) sample2.pml:70 (state 3) [else]
12:  proc  0 (:init::1) sample2.pml:70 (state 4) [mypair[x].key = 10]
13: proc  0 (:init::1) sample2.pml:70 (state 5) [mypair[x].tid = x]
14:    proc  0 (:init::1) sample2.pml:70 (state 6) [x = (x+1)]
15:   proc  0 (:init::1) sample2.pml:73 (state 8) [.(goto)]
16:  proc  0 (:init::1) sample2.pml:70 (state 3) [else]
17: proc  0 (:init::1) sample2.pml:70 (state 4) [mypair[x].key = 10]
18:    proc  0 (:init::1) sample2.pml:70 (state 5) [mypair[x].tid = x]
19:   proc  0 (:init::1) sample2.pml:70 (state 6) [x = (x+1)]
20:  proc  0 (:init::1) sample2.pml:73 (state 8) [.(goto)]
21: proc  0 (:init::1) sample2.pml:69 (state 1) [((x>4))]
22:    proc  0 (:init::1) sample2.pml:69 (state 2) [goto :b1]
23:   proc  0 (:init::1) sample2.pml:74 (state 10)    [y = 1]
24:  proc  0 (:init::1) sample2.pml:79 (state 17)    [.(goto)]
25: proc  0 (:init::1) sample2.pml:76 (state 13)    [else]
Starting insert with pid 1
26:    proc  0 (:init::1) creates proc  1 (insert)
26:   proc  0 (:init::1) sample2.pml:76 (state 14)    [(run insert(y,y,key))]
27:  proc  1 (insert:1) sample2.pml:30 (state 3) [else]
28: proc  1 (insert:1) sample2.pml:42 (state 21)    [else]
29:    proc  0 (:init::1) sample2.pml:76 (state 15)    [y = (y+1)]
30:   proc  1 (insert:1) sample2.pml:42 (state 22)    [temp = (temp+1)]
31:  proc  0 (:init::1) sample2.pml:79 (state 17)    [.(goto)]
32: proc  0 (:init::1) sample2.pml:76 (state 13)    [else]
Starting insert with pid 2
33:    proc  0 (:init::1) creates proc  2 (insert)
33:   proc  0 (:init::1) sample2.pml:76 (state 14)    [(run insert(y,y,key))]
34:  proc  0 (:init::1) sample2.pml:76 (state 15)    [y = (y+1)]
35: proc  0 (:init::1) sample2.pml:79 (state 17)    [.(goto)]
36:    proc  0 (:init::1) sample2.pml:76 (state 13)    [else]
37:   proc  2 (insert:1) sample2.pml:30 (state 3) [else]
38:  proc  2 (insert:1) sample2.pml:32 (state 4) [(((mypair[temp].key==mykey)&&(mypair[temp].tid<mytid)))]
39: proc  1 (insert:1) sample2.pml:44 (state 24)    [.(goto)]
Starting insert with pid 3
40:    proc  0 (:init::1) creates proc  3 (insert)
40:   proc  0 (:init::1) sample2.pml:76 (state 14)    [(run insert(y,y,key))]
41:  proc  2 (insert:1) sample2.pml:32 (state 5) [retVal = 0]
42: proc  1 (insert:1) sample2.pml:46 (state 26)    [.(goto)]
43:    proc  0 (:init::1) sample2.pml:76 (state 15)    [y = (y+1)]
44:   proc  1 (insert:1) sample2.pml:30 (state 3) [else]
45:  proc  3 (insert:1) sample2.pml:30 (state 3) [else]
46: proc  0 (:init::1) sample2.pml:79 (state 17)    [.(goto)]
47:    proc  2 (insert:1) sample2.pml:32 (state 6) [temp = (4+1)]
48:   proc  3 (insert:1) sample2.pml:32 (state 4) [(((mypair[temp].key==mykey)&&(mypair[temp].tid<mytid)))]
49:  proc  1 (insert:1) sample2.pml:33 (state 8) [((((mypair[temp].tid>mytid)&&(mypair[temp].key==mykey))&&(mypair[temp].tid!=1000)))]
50: proc  2 (insert:1) sample2.pml:32 (state 7) [goto :b0]
51:    proc  0 (:init::1) sample2.pml:76 (state 13)    [else]
52:   proc  3 (insert:1) sample2.pml:32 (state 5) [retVal = 0]
53:  proc  2 (insert:1) sample2.pml:58 (state 41)    [else]
54: proc  3 (insert:1) sample2.pml:32 (state 6) [temp = (4+1)]
55:    proc  2 (insert:1) sample2.pml:59 (state 42)    [mypair[slot].key = 0]
56:   proc  2 (insert:1) sample2.pml:60 (state 43)    [mypair[slot].tid = 0]
Starting insert with pid 4
57:  proc  0 (:init::1) creates proc  4 (insert)
57: proc  0 (:init::1) sample2.pml:76 (state 14)    [(run insert(y,y,key))]
58:    proc  2 (insert:1) sample2.pml:63 (state 46)    [.(goto)]
59:   proc  0 (:init::1) sample2.pml:76 (state 15)    [y = (y+1)]
60:  proc  1 (insert:1) sample2.pml:34 (state 9) [vartid = mypair[temp].tid]
61: proc  4 (insert:1) sample2.pml:30 (state 3) [else]
62:    proc  1 (insert:1) sample2.pml:34 (state 10)    [varkey = mypair[temp].key]
63:   proc  4 (insert:1) sample2.pml:32 (state 4) [(((mypair[temp].key==mykey)&&(mypair[temp].tid<mytid)))]
64:  proc  3 (insert:1) sample2.pml:32 (state 7) [goto :b0]
65: proc  3 (insert:1) sample2.pml:58 (state 41)    [else]
66:    proc  3 (insert:1) sample2.pml:59 (state 42)    [mypair[slot].key = 0]
67:   proc  3 (insert:1) sample2.pml:60 (state 43)    [mypair[slot].tid = 0]
68:  proc  4 (insert:1) sample2.pml:32 (state 5) [retVal = 0]
69: proc  4 (insert:1) sample2.pml:32 (state 6) [temp = (4+1)]
70:    proc  3 (insert:1) sample2.pml:63 (state 46)    [.(goto)]
71:   proc  4 (insert:1) sample2.pml:32 (state 7) [goto :b0]
74:  proc  1 (insert:1) sample2.pml:41 (state 20)    [temp = (temp+1)]
75: proc  4 (insert:1) sample2.pml:58 (state 41)    [else]
76:    proc  1 (insert:1) sample2.pml:44 (state 24)    [.(goto)]
77:   proc  0 (:init::1) sample2.pml:79 (state 17)    [.(goto)]
78:  proc  4 (insert:1) sample2.pml:59 (state 42)    [mypair[slot].key = 0]
79: proc  4 (insert:1) sample2.pml:60 (state 43)    [mypair[slot].tid = 0]
80:    proc  4 (insert:1) sample2.pml:63 (state 46)    [.(goto)]
81:   proc  1 (insert:1) sample2.pml:46 (state 26)    [.(goto)]
81:  proc  4 (insert:1)                       terminates
82: proc  1 (insert:1) sample2.pml:30 (state 3) [else]
83:    proc  1 (insert:1) sample2.pml:42 (state 21)    [else]
84:   proc  1 (insert:1) sample2.pml:42 (state 22)    [temp = (temp+1)]
84:  proc  3 (insert:1)                   terminates
85: proc  0 (:init::1) sample2.pml:75 (state 11)    [((y>4))]
86:    proc  0 (:init::1) sample2.pml:75 (state 12)    [goto :b2]
86:   proc  2 (insert:1)               terminates
87:  proc  1 (insert:1) sample2.pml:44 (state 24)    [.(goto)]
88: proc  1 (insert:1) sample2.pml:46 (state 26)    [.(goto)]
89:    proc  1 (insert:1) sample2.pml:30 (state 3) [else]
90:   proc  1 (insert:1) sample2.pml:42 (state 21)    [else]
91:  proc  1 (insert:1) sample2.pml:42 (state 22)    [temp = (temp+1)]
92: proc  1 (insert:1) sample2.pml:44 (state 24)    [.(goto)]
93:    proc  1 (insert:1) sample2.pml:46 (state 26)    [.(goto)]
94:   proc  1 (insert:1) sample2.pml:29 (state 1) [((temp>4))]
95:  proc  1 (insert:1) sample2.pml:29 (state 2) [goto :b0]
96: proc  1 (insert:1) sample2.pml:47 (state 28)    [(retVal)]
tid is 1 retVal is true
100:  proc  1 (insert:1)           terminates
101:  proc  0 (:init::1) sample2.pml:79 (state 19)    [((_nr_pr==1))]
102:  proc  0 (:init::1) sample2.pml:80 (state 20)    [z = 1]
103:  proc  0 (:init::1) sample2.pml:80 (state 21)    [counter1 = 0]
104:  proc  0 (:init::1) sample2.pml:81 (state 22)    [counter2 = 0]
105:  proc  0 (:init::1) sample2.pml:92 (state 36)    [.(goto)]
106:  proc  0 (:init::1) sample2.pml:83 (state 25)    [else]
107:  proc  0 (:init::1) sample2.pml:85 (state 26)    [((mypair[z].key==10))]
108:  proc  0 (:init::1) sample2.pml:85 (state 27)    [counter1 = (counter1+1)]
109:  proc  0 (:init::1) sample2.pml:89 (state 33)    [.(goto)]
110:  proc  0 (:init::1) sample2.pml:89 (state 34)    [z = (z+1)]
111:  proc  0 (:init::1) sample2.pml:92 (state 36)    [.(goto)]
112:  proc  0 (:init::1) sample2.pml:83 (state 25)    [else]
113:  proc  0 (:init::1) sample2.pml:86 (state 28)    [((mypair[z].tid!=0))]
114:  proc  0 (:init::1) sample2.pml:86 (state 29)    [counter2 = (counter2+1)]
115:  proc  0 (:init::1) sample2.pml:89 (state 33)    [.(goto)]
116:  proc  0 (:init::1) sample2.pml:89 (state 34)    [z = (z+1)]
117:  proc  0 (:init::1) sample2.pml:92 (state 36)    [.(goto)]
118:  proc  0 (:init::1) sample2.pml:83 (state 25)    [else]
119:  proc  0 (:init::1) sample2.pml:87 (state 30)    [else]
120:  proc  0 (:init::1) sample2.pml:87 (state 31)    [(1)]
121:  proc  0 (:init::1) sample2.pml:89 (state 33)    [.(goto)]
122:  proc  0 (:init::1) sample2.pml:89 (state 34)    [z = (z+1)]
123:  proc  0 (:init::1) sample2.pml:92 (state 36)    [.(goto)]
124:  proc  0 (:init::1) sample2.pml:83 (state 25)    [else]
125:  proc  0 (:init::1) sample2.pml:87 (state 30)    [else]
126:  proc  0 (:init::1) sample2.pml:87 (state 31)    [(1)]
127:  proc  0 (:init::1) sample2.pml:89 (state 33)    [.(goto)]
128:  proc  0 (:init::1) sample2.pml:89 (state 34)    [z = (z+1)]
129:  proc  0 (:init::1) sample2.pml:92 (state 36)    [.(goto)]
130:  proc  0 (:init::1) sample2.pml:82 (state 23)    [((z>4))]
131:  proc  0 (:init::1) sample2.pml:82 (state 24)    [goto :b3]
spin: sample2.pml:92, Error: assertion violated
spin: text of failed assertion: assert(((counter1==1)&&(counter2==0)))
#processes: 1
mypair[0].key = 0
mypair[0].tid = 0
mypair[1].key = 10
mypair[1].tid = 0
mypair[2].key = 0
mypair[2].tid = 1000
mypair[3].key = 0
mypair[3].tid = 0
mypair[4].key = 0
mypair[4].tid = 0
132:    proc  0 (:init::1) sample2.pml:92 (state 38)
5 processes created
